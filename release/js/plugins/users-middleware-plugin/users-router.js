'use strict';
var express = require('express');
var bodyParser = require('body-parser');
var UsersController = require('./users-controller').default;
/**
 * @class         Users
 * @module        Users
 * @constructor
 */
function routes() {
    console.log('Router Constructor');
    // curl -X GET http://localhost:3000/users/2
    // curl -X POST -d "name=flops&description=sandals&price=12.00" http://localhost:3000/users
    // curl -X PUT -d "name=flipflops&description=sandals&price=12.00" http://localhost:3000/users/3
    // curl -X DELETE http://localhost:3000/users/2
    var app = express();
    var controller = new UsersController();
    var router = new express.Router();
    //error handler
    router.use(function (err, req, res, next) {
        console.error(err.stack);
        res.status(500).send('Something broke!');
    });
    router.all('/users/*', controller.all);
    router.get('/users', controller.get_route);
    router.get('/users/:id?', controller.get_route);
    router.delete('/users/:id', controller.delete_route);
    router.post('/users', bodyParser.json(), controller.post_route);
    router.put('/users/:id', bodyParser.json(), controller.put_route);
    router.use(controller.use);
    app.use(bodyParser.json());
    app.use('/', router);
    return app;
}
exports["default"] = routes;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMvdXNlcnMtbWlkZGxld2FyZS1wbHVnaW4vdXNlcnMtcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUNiLElBQU8sT0FBTyxXQUFXLFNBQVMsQ0FBQyxDQUFDO0FBRXBDLElBQU8sVUFBVSxXQUFXLGFBQWEsQ0FBQyxDQUFDO0FBQzNDLElBQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQztBQUM5RDs7OztHQUlHO0FBQ0g7SUFDSSxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDbEMsNENBQTRDO0lBQzVDLDJGQUEyRjtJQUMvRixnR0FBZ0c7SUFDaEcsK0NBQStDO0lBQzNDLElBQUksR0FBRyxHQUFHLE9BQU8sRUFBRSxDQUFDO0lBQ3BCLElBQUksVUFBVSxHQUFHLElBQUksZUFBZSxFQUFFLENBQUM7SUFDdkMsSUFBSSxNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7SUFHbEMsZUFBZTtJQUNmLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJO1FBQ3BDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pCLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDN0MsQ0FBQyxDQUFDLENBQUM7SUFFSCxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDdEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUMvQyxNQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUE7SUFFcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLElBQUksRUFBRSxFQUFFLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUMvRCxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxVQUFVLENBQUMsSUFBSSxFQUFFLEVBQUUsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ2pFLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTNCLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDM0IsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDckIsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNmLENBQUM7QUE3QkQsMkJBNkJDLENBQUEiLCJmaWxlIjoicGx1Z2lucy91c2Vycy1taWRkbGV3YXJlLXBsdWdpbi91c2Vycy1yb3V0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmltcG9ydCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuaW1wb3J0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3QgVXNlcnNDb250cm9sbGVyID0gcmVxdWlyZSgnLi91c2Vycy1jb250cm9sbGVyJykuZGVmYXVsdDtcbi8qKlxuICogQGNsYXNzICAgICAgICAgVXNlcnNcbiAqIEBtb2R1bGUgICAgICAgIFVzZXJzXG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm91dGVzKCkge1xuICAgIGNvbnNvbGUubG9nKCdSb3V0ZXIgQ29uc3RydWN0b3InKTtcbiAgICAvLyBjdXJsIC1YIEdFVCBodHRwOi8vbG9jYWxob3N0OjMwMDAvdXNlcnMvMlxuICAgIC8vIGN1cmwgLVggUE9TVCAtZCBcIm5hbWU9ZmxvcHMmZGVzY3JpcHRpb249c2FuZGFscyZwcmljZT0xMi4wMFwiIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c2Vyc1xuLy8gY3VybCAtWCBQVVQgLWQgXCJuYW1lPWZsaXBmbG9wcyZkZXNjcmlwdGlvbj1zYW5kYWxzJnByaWNlPTEyLjAwXCIgaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzZXJzLzNcbi8vIGN1cmwgLVggREVMRVRFIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c2Vycy8yXG4gICAgdmFyIGFwcCA9IGV4cHJlc3MoKTtcbiAgICB2YXIgY29udHJvbGxlciA9IG5ldyBVc2Vyc0NvbnRyb2xsZXIoKTtcbiAgICB2YXIgcm91dGVyID0gbmV3IGV4cHJlc3MuUm91dGVyKCk7XG5cblxuICAgIC8vZXJyb3IgaGFuZGxlclxuICAgIHJvdXRlci51c2UoZnVuY3Rpb24gKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIuc3RhY2spO1xuICAgICAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnU29tZXRoaW5nIGJyb2tlIScpO1xuICAgIH0pO1xuXG4gICAgcm91dGVyLmFsbCgnL3VzZXJzLyonLCBjb250cm9sbGVyLmFsbClcbiAgICByb3V0ZXIuZ2V0KCcvdXNlcnMnLCBjb250cm9sbGVyLmdldF9yb3V0ZSk7XG4gICAgcm91dGVyLmdldCgnL3VzZXJzLzppZD8nLCBjb250cm9sbGVyLmdldF9yb3V0ZSlcbiAgICByb3V0ZXIuZGVsZXRlKCcvdXNlcnMvOmlkJywgY29udHJvbGxlci5kZWxldGVfcm91dGUpXG5cbiAgICByb3V0ZXIucG9zdCgnL3VzZXJzJywgYm9keVBhcnNlci5qc29uKCksIGNvbnRyb2xsZXIucG9zdF9yb3V0ZSlcbiAgICByb3V0ZXIucHV0KCcvdXNlcnMvOmlkJywgYm9keVBhcnNlci5qc29uKCksIGNvbnRyb2xsZXIucHV0X3JvdXRlKVxuICAgIHJvdXRlci51c2UoY29udHJvbGxlci51c2UpO1xuXG4gICAgYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG4gICAgYXBwLnVzZSgnLycsIHJvdXRlcik7XG4gICAgcmV0dXJuIGFwcDtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
