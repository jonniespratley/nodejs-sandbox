'use strict';
var assert = require('assert');
var express = require('express');
var request = require('supertest');
var plugin = require('./');
var app = express();
plugin(app);
describe('app-plugin', function () {
    it('should be defined', function () {
        assert(plugin);
    });
    it('GET - /newRoute - should return 200', function (done) {
        request(app)
            .get('/newRoute')
            .expect('Content-Type', /json/)
            .expect(200, done);
    });
    it('POST - /newRoute - should return 201', function (done) {
        request(app)
            .post('/newRoute')
            .send({
            name: 'Jonnie'
        })
            .expect('Content-Type', /json/)
            .expect(201, done);
    });
    it('PUT - /newRoute/:id - should return 200', function (done) {
        request(app)
            .put('/newRoute/1')
            .send({
            name: 'Jonnie Dollas'
        })
            .expect('Content-Type', /json/)
            .expect(200, done);
    });
    it('DELETE - /newRoute/:id - should return 200', function (done) {
        request(app)
            .delete('/newRoute/1')
            .expect('Content-Type', /json/)
            .expect(200, done);
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMvYXBwLXBsdWdpbi9pbmRleC1zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUNiLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNqQyxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDbkMsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3JDLElBQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUU3QixJQUFJLEdBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUNwQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7QUFFWixRQUFRLENBQUMsWUFBWSxFQUFFO0lBRXJCLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRTtRQUN0QixNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDakIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMscUNBQXFDLEVBQUUsVUFBUyxJQUFJO1FBQ3JELE9BQU8sQ0FBQyxHQUFHLENBQUM7YUFDVCxHQUFHLENBQUMsV0FBVyxDQUFDO2FBQ2hCLE1BQU0sQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDO2FBQzlCLE1BQU0sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsc0NBQXNDLEVBQUUsVUFBUyxJQUFJO1FBQ3RELE9BQU8sQ0FBQyxHQUFHLENBQUM7YUFDVCxJQUFJLENBQUMsV0FBVyxDQUFDO2FBQ2pCLElBQUksQ0FBQztZQUNKLElBQUksRUFBRSxRQUFRO1NBQ2YsQ0FBQzthQUNELE1BQU0sQ0FBQyxjQUFjLEVBQUUsTUFBTSxDQUFDO2FBQzlCLE1BQU0sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMseUNBQXlDLEVBQUUsVUFBUyxJQUFJO1FBQ3pELE9BQU8sQ0FBQyxHQUFHLENBQUM7YUFDVCxHQUFHLENBQUMsYUFBYSxDQUFDO2FBQ2xCLElBQUksQ0FBQztZQUNKLElBQUksRUFBRSxlQUFlO1NBQ3RCLENBQUM7YUFDRCxNQUFNLENBQUMsY0FBYyxFQUFFLE1BQU0sQ0FBQzthQUM5QixNQUFNLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDRDQUE0QyxFQUFFLFVBQVMsSUFBSTtRQUM1RCxPQUFPLENBQUMsR0FBRyxDQUFDO2FBQ1QsTUFBTSxDQUFDLGFBQWEsQ0FBQzthQUNyQixNQUFNLENBQUMsY0FBYyxFQUFFLE1BQU0sQ0FBQzthQUM5QixNQUFNLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUFDO0FBSUwsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoicGx1Z2lucy9hcHAtcGx1Z2luL2luZGV4LXNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCByZXF1ZXN0ID0gcmVxdWlyZSgnc3VwZXJ0ZXN0Jyk7XG5jb25zdCBwbHVnaW4gPSByZXF1aXJlKCcuLycpO1xuXG52YXIgYXBwID0gZXhwcmVzcygpO1xucGx1Z2luKGFwcCk7XG5cbmRlc2NyaWJlKCdhcHAtcGx1Z2luJywgZnVuY3Rpb24oKSB7XG5cbiAgaXQoJ3Nob3VsZCBiZSBkZWZpbmVkJywgZnVuY3Rpb24oKSB7XG4gICAgYXNzZXJ0KHBsdWdpbik7XG4gIH0pO1xuXG4gIGl0KCdHRVQgLSAvbmV3Um91dGUgLSBzaG91bGQgcmV0dXJuIDIwMCcsIGZ1bmN0aW9uKGRvbmUpIHtcbiAgICByZXF1ZXN0KGFwcClcbiAgICAgIC5nZXQoJy9uZXdSb3V0ZScpXG4gICAgICAuZXhwZWN0KCdDb250ZW50LVR5cGUnLCAvanNvbi8pXG4gICAgICAuZXhwZWN0KDIwMCwgZG9uZSk7XG4gIH0pO1xuXG4gIGl0KCdQT1NUIC0gL25ld1JvdXRlIC0gc2hvdWxkIHJldHVybiAyMDEnLCBmdW5jdGlvbihkb25lKSB7XG4gICAgcmVxdWVzdChhcHApXG4gICAgICAucG9zdCgnL25ld1JvdXRlJylcbiAgICAgIC5zZW5kKHtcbiAgICAgICAgbmFtZTogJ0pvbm5pZSdcbiAgICAgIH0pXG4gICAgICAuZXhwZWN0KCdDb250ZW50LVR5cGUnLCAvanNvbi8pXG4gICAgICAuZXhwZWN0KDIwMSwgZG9uZSk7XG4gIH0pO1xuXG4gIGl0KCdQVVQgLSAvbmV3Um91dGUvOmlkIC0gc2hvdWxkIHJldHVybiAyMDAnLCBmdW5jdGlvbihkb25lKSB7XG4gICAgcmVxdWVzdChhcHApXG4gICAgICAucHV0KCcvbmV3Um91dGUvMScpXG4gICAgICAuc2VuZCh7XG4gICAgICAgIG5hbWU6ICdKb25uaWUgRG9sbGFzJ1xuICAgICAgfSlcbiAgICAgIC5leHBlY3QoJ0NvbnRlbnQtVHlwZScsIC9qc29uLylcbiAgICAgIC5leHBlY3QoMjAwLCBkb25lKTtcbiAgfSk7XG5cbiAgaXQoJ0RFTEVURSAtIC9uZXdSb3V0ZS86aWQgLSBzaG91bGQgcmV0dXJuIDIwMCcsIGZ1bmN0aW9uKGRvbmUpIHtcbiAgICByZXF1ZXN0KGFwcClcbiAgICAgIC5kZWxldGUoJy9uZXdSb3V0ZS8xJylcbiAgICAgIC5leHBlY3QoJ0NvbnRlbnQtVHlwZScsIC9qc29uLylcbiAgICAgIC5leHBlY3QoMjAwLCBkb25lKTtcbiAgfSk7XG5cblxuXG59KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
