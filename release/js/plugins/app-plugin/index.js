/*
in the application:
var app = express();
require('thePlugin')(app);
*/
module.exports = function plugin(app, namespace) {
    console.log('app-plugin', 'namespace', namespace);
    app.route('/newRoute?/:id?')
        .all(function (req, res, next) {
        console.log('app-plugin middleware', req.method, req.url);
        next();
    })
        .get(function (req, res, next) {
        res.status(200).json({
            message: 'Welcome'
        });
    })
        .put(function (req, res, next) {
        res.status(200).json({
            message: 'Updated'
        });
    })
        .post(function (req, res, next) {
        res.status(201).json({
            message: 'Saved'
        });
    })
        .delete(function (req, res, next) {
        res.status(200).json({
            message: 'Removed'
        });
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMvYXBwLXBsdWdpbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztFQUlFO0FBQ0YsTUFBTSxDQUFDLE9BQU8sR0FBRyxnQkFBZ0IsR0FBRyxFQUFFLFNBQVM7SUFFN0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRWxELEdBQUcsQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUM7U0FDekIsR0FBRyxDQUFDLFVBQVMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJO1FBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDMUQsSUFBSSxFQUFFLENBQUM7SUFDVCxDQUFDLENBQUM7U0FDRCxHQUFHLENBQUMsVUFBUyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUk7UUFDMUIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDbkIsT0FBTyxFQUFFLFNBQVM7U0FDbkIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO1NBQ0QsR0FBRyxDQUFDLFVBQVMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJO1FBQzFCLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQ25CLE9BQU8sRUFBRSxTQUFTO1NBQ25CLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztTQUNELElBQUksQ0FBQyxVQUFTLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSTtRQUMzQixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNuQixPQUFPLEVBQUUsT0FBTztTQUNqQixDQUFDLENBQUM7SUFDTCxDQUFDLENBQUM7U0FDRCxNQUFNLENBQUMsVUFBUyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUk7UUFDN0IsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDbkIsT0FBTyxFQUFFLFNBQVM7U0FDbkIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMiLCJmaWxlIjoicGx1Z2lucy9hcHAtcGx1Z2luL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbmluIHRoZSBhcHBsaWNhdGlvbjpcbnZhciBhcHAgPSBleHByZXNzKCk7XG5yZXF1aXJlKCd0aGVQbHVnaW4nKShhcHApO1xuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGx1Z2luKGFwcCwgbmFtZXNwYWNlKSB7XG5cbiAgY29uc29sZS5sb2coJ2FwcC1wbHVnaW4nLCAnbmFtZXNwYWNlJywgbmFtZXNwYWNlKTtcblxuICBhcHAucm91dGUoJy9uZXdSb3V0ZT8vOmlkPycpXG4gICAgLmFsbChmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgY29uc29sZS5sb2coJ2FwcC1wbHVnaW4gbWlkZGxld2FyZScsIHJlcS5tZXRob2QsIHJlcS51cmwpO1xuICAgICAgbmV4dCgpO1xuICAgIH0pXG4gICAgLmdldChmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnV2VsY29tZSdcbiAgICAgIH0pO1xuICAgIH0pXG4gICAgLnB1dChmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnVXBkYXRlZCdcbiAgICAgIH0pO1xuICAgIH0pXG4gICAgLnBvc3QoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ1NhdmVkJ1xuICAgICAgfSk7XG4gICAgfSlcbiAgICAuZGVsZXRlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdSZW1vdmVkJ1xuICAgICAgfSk7XG4gICAgfSk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
